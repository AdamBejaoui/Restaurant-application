{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Colors, Images, Fonts } from \"../contants\";\nimport { Display } from \"../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Splashscreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    buttonPressed = _useState2[0],\n    setButtonPressed = _useState2[1];\n  var handleButtonPress = function handleButtonPress() {\n    setButtonPressed(true);\n    navigation.navigate(\"TabNav\");\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ImageBackground, {\n      source: Images.PIZZA,\n      resizeMode: \"cover\",\n      style: styles.imageBackground,\n      children: [_jsx(StatusBar, {\n        barStyle: \"light-content\",\n        backgroundColor: Colors.DEFAULT_BLACK,\n        translucent: true\n      }), _jsx(View, {\n        style: styles.imageContainer\n      }), _jsx(LinearGradient, {\n        colors: [\"transparent\", \"rgba(0, 0, 0, 0.8)\"],\n        style: styles.linearGradient\n      }), _jsxs(View, {\n        style: styles.textContainer,\n        children: [_jsx(Text, {\n          style: styles.mainText,\n          children: \"Food so good, it's a hug for your taste buds.\"\n        }), _jsx(Text, {\n          style: styles.secondText,\n          children: \"\\\"Reserve the moment, savor the experience.\\\"\"\n        })]\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableHighlight, {\n          style: styles.button,\n          onPress: handleButtonPress,\n          underlayColor: \"red\",\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Get Started\"\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  imageBackground: {\n    flex: 1\n  },\n  imageContainer: {\n    height: Display.setHeight(60),\n    width: Display.setWidth(60)\n  },\n  linearGradient: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  buttonContainer: {\n    alignItems: \"center\",\n    marginBottom: 0,\n    bottom: 100\n  },\n  textContainer: {\n    alignItems: \"center\",\n    marginBottom: 0\n  },\n  mainText: {\n    fontSize: 60,\n    fontWeight: \"bold\",\n    marginBottom: 0,\n    color: Colors.DEFAULT_WHITE,\n    bottom: 300\n  },\n  secondText: {\n    fontSize: 20,\n    marginBottom: 0,\n    color: Colors.DEFAULT_GREY,\n    bottom: 250\n  },\n  button: {\n    borderRadius: 20,\n    borderWidth: 2,\n    borderColor: \"red\",\n    paddingVertical: 15,\n    paddingHorizontal: 80\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","StatusBar","ImageBackground","TouchableHighlight","LinearGradient","Colors","Images","Fonts","Display","jsx","_jsx","jsxs","_jsxs","Splashscreen","_ref","navigation","_useState","_useState2","_slicedToArray","buttonPressed","setButtonPressed","handleButtonPress","navigate","style","styles","container","children","source","PIZZA","resizeMode","imageBackground","barStyle","backgroundColor","DEFAULT_BLACK","translucent","imageContainer","colors","linearGradient","textContainer","mainText","secondText","buttonContainer","button","onPress","underlayColor","buttonText","create","flex","height","setHeight","width","setWidth","position","top","left","right","bottom","alignItems","marginBottom","fontSize","fontWeight","color","DEFAULT_WHITE","DEFAULT_GREY","borderRadius","borderWidth","borderColor","paddingVertical","paddingHorizontal"],"sources":["C:/Users/mahmoud/Desktop/Nouveau dossier/Restaurant-application/Client/src/screens/SplashScreen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  StatusBar,\r\n  ImageBackground,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { Colors, Images, Fonts } from \"../contants\";\r\nimport { Display } from \"../utils\";\r\n\r\nexport default function Splashscreen({navigation}) {\r\n  const [buttonPressed, setButtonPressed] = useState(false);\r\n\r\n  const handleButtonPress = () => {\r\n    setButtonPressed(true);\r\n    navigation.navigate(\"TabNav\")\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ImageBackground\r\n        source={Images.PIZZA}\r\n        resizeMode=\"cover\"\r\n        style={styles.imageBackground}\r\n      >\r\n        <StatusBar\r\n          barStyle=\"light-content\"\r\n          backgroundColor={Colors.DEFAULT_BLACK}\r\n          translucent\r\n        />\r\n        <View style={styles.imageContainer}></View>\r\n        <LinearGradient\r\n          colors={[\"transparent\", \"rgba(0, 0, 0, 0.8)\"]}\r\n          style={styles.linearGradient}\r\n        />\r\n        <View style={styles.textContainer}>\r\n          <Text style={styles.mainText}>\r\n            Food so good, it's a hug for your taste buds.\r\n          </Text>\r\n          <Text style={styles.secondText}>\"Reserve the moment, savor the experience.\"</Text>\r\n        </View>\r\n\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableHighlight\r\n            style={\r\n              styles.button\r\n            }\r\n            onPress={handleButtonPress}\r\n            underlayColor=\"red\"\r\n          >\r\n            <Text style={styles.buttonText}>Get Started</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </ImageBackground>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  imageBackground: {\r\n    flex: 1,\r\n  },\r\n  imageContainer: {\r\n    height:Display.setHeight(60),\r\n    width:Display.setWidth(60),\r\n  },\r\n  linearGradient: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n  },\r\n  buttonContainer: {\r\n    alignItems: \"center\",\r\n    marginBottom: 0,\r\n    bottom: 100,\r\n  },\r\n  textContainer: {\r\n    alignItems: \"center\",\r\n    marginBottom: 0,\r\n  },\r\n  mainText: {\r\n    fontSize: 60,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 0,\r\n    color: Colors.DEFAULT_WHITE,\r\n    bottom: 300,\r\n  },\r\n  secondText: {\r\n    fontSize: 20,\r\n    marginBottom: 0,\r\n    color: Colors.DEFAULT_GREY,\r\n    bottom: 250,\r\n  },\r\n  button: {\r\n    borderRadius: 20,\r\n    borderWidth: 2,\r\n    borderColor: \"red\",\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 80,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}