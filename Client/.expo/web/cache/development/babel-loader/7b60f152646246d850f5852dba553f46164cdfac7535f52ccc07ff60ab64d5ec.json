{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Colors } from \"../contants\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport RestaurantCard from \"../Component/RestaurantCard\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    restaurant = _useState2[0],\n    setRestaurant = _useState2[1];\n  var handleButtonPress = function handleButtonPress(restaurant) {\n    navigation.navigate(\"RestaurantDetails\", {\n      restaurant: restaurant\n    });\n    console.log(restaurant);\n  };\n  var fetchData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(\"http://192.168.0.134:3000/api/restaurants\");\n        if (response.ok) {\n          var data = yield response.json();\n          console.log(data);\n          setRestaurant(data);\n        } else {\n          console.error(\"Failed to fetch data\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  React.useEffect(function () {\n    fetchData();\n  }, []);\n  return _jsxs(ScrollView, {\n    vertical: true,\n    style: styles.container,\n    showsVerticalScrollIndicator: false,\n    contentContainerStyle: styles.scrollViewFlex,\n    children: [_jsxs(View, {\n      children: [_jsx(View, {\n        children: _jsxs(Text, {\n          style: styles.screenTitle,\n          children: [\"Find the best\", \"\\n\", \"restaurant near you.\"]\n        })\n      }), _jsxs(View, {\n        style: styles.InputContainer,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {},\n          children: _jsx(AntDesign, {\n            name: \"search1\",\n            size: 24,\n            color: Colors.DEFAULT_RED,\n            style: styles.search\n          })\n        }), _jsx(TextInput, {\n          placeholder: \"Find a restaurant...\",\n          value: {},\n          placeholderTextColor: Colors.primaryLightGreyHex,\n          style: styles.TextInputContainer\n        })]\n      })]\n    }), _jsx(View, {\n      children: _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.CategoryScrollViewStyle,\n        children: _jsx(View, {\n          style: styles.ActiveCategory,\n          children: _jsx(TouchableOpacity, {\n            style: styles.CategoryStyleView,\n            children: _jsx(Text, {\n              style: styles.CategoryText,\n              children: \"category 1\"\n            })\n          })\n        })\n      })\n    }), _jsx(ScrollView, {\n      vertical: true,\n      children: restaurant.map(function (rest) {\n        return _jsx(View, {\n          children: _jsx(RestaurantCard, {\n            restaurant: rest,\n            onPress: function onPress(restaurant) {\n              return handleButtonPress(restaurant);\n            }\n          })\n        }, rest.id);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.SECONDARY_BLACK\n  },\n  screenTitle: {\n    fontSize: 25,\n    color: Colors.primaryWhiteHex,\n    paddingLeft: 30,\n    top: 100\n  },\n  TextInputContainer: {\n    height: 20 * 2,\n    width: 300\n  },\n  InputContainer: {\n    flexDirection: \"row\",\n    margin: 30,\n    borderRadius: 10,\n    backgroundColor: \"#A9A9A9\",\n    alignItems: \"center\",\n    top: 100,\n    marginBottom: 110\n  },\n  search: {\n    marginHorizontal: 10\n  },\n  scrollViewFlex: {},\n  CategoryScrollViewStyle: {\n    paddingHorizontal: 10\n  },\n  ActiveCategory: {\n    flexDirection: \"row\",\n    marginBottom: 20\n  },\n  CategoryText: {\n    color: Colors.primaryWhiteHex,\n    margin: 10,\n    padding: 10,\n    backgroundColor: Colors.DEFAULT_GREEN\n  },\n  CategoryStyleView: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","TextInput","ScrollView","Colors","AntDesign","RestaurantCard","jsxs","_jsxs","jsx","_jsx","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","restaurant","setRestaurant","handleButtonPress","navigate","console","log","fetchData","_ref2","_asyncToGenerator","response","fetch","ok","data","json","error","apply","arguments","useEffect","vertical","style","styles","container","showsVerticalScrollIndicator","contentContainerStyle","scrollViewFlex","children","screenTitle","InputContainer","onPress","name","size","color","DEFAULT_RED","search","placeholder","value","placeholderTextColor","primaryLightGreyHex","TextInputContainer","horizontal","showsHorizontalScrollIndicator","CategoryScrollViewStyle","ActiveCategory","CategoryStyleView","CategoryText","map","rest","id","create","flex","backgroundColor","SECONDARY_BLACK","fontSize","primaryWhiteHex","paddingLeft","top","height","width","flexDirection","margin","borderRadius","alignItems","marginBottom","marginHorizontal","paddingHorizontal","padding","DEFAULT_GREEN"],"sources":["C:/Users/mahmoud/Desktop/Nouveau dossier/Restaurant-application/Client/src/screens/HomeScreen.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport { Colors } from \"../contants\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport RestaurantCard from \"../Component/RestaurantCard\";\r\n\r\nexport default function HomeScreen({navigation}) {\r\n  const [restaurant, setRestaurant] = useState([]);\r\n\r\n\r\n  const handleButtonPress = (restaurant) => {\r\n    navigation.navigate(\"RestaurantDetails\", {restaurant});\r\n    console.log(restaurant)\r\n  };\r\n  \r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://192.168.0.134:3000/api/restaurants\");\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(data);\r\n        setRestaurant(data);\r\n      } else {\r\n        console.error(\"Failed to fetch data\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <ScrollView\r\n      vertical\r\n      style={styles.container}\r\n      showsVerticalScrollIndicator={false}\r\n      contentContainerStyle={styles.scrollViewFlex}\r\n    >\r\n      <View>\r\n        <View>\r\n          <Text style={styles.screenTitle}>\r\n            Find the best{\"\\n\"}restaurant near you.\r\n          </Text>\r\n        </View>\r\n        <View style={styles.InputContainer}>\r\n          <TouchableOpacity onPress={() => {}}>\r\n            <AntDesign\r\n              name=\"search1\"\r\n              size={24}\r\n              color={Colors.DEFAULT_RED}\r\n              style={styles.search}\r\n            />\r\n          </TouchableOpacity>\r\n          <TextInput\r\n            placeholder=\"Find a restaurant...\"\r\n            value={{}}\r\n            placeholderTextColor={Colors.primaryLightGreyHex}\r\n            style={styles.TextInputContainer}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View>\r\n        <ScrollView\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          contentContainerStyle={styles.CategoryScrollViewStyle}\r\n        >\r\n          <View style={styles.ActiveCategory}>\r\n            <TouchableOpacity style={styles.CategoryStyleView}>\r\n              <Text style={styles.CategoryText}>category 1</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n      <ScrollView vertical>\r\n        {\r\n          restaurant.map((rest) => (\r\n            <View key={rest.id} >\r\n              <RestaurantCard restaurant={rest} onPress={(restaurant) => handleButtonPress(restaurant)} />\r\n            </View>\r\n          ))}\r\n      </ScrollView>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.SECONDARY_BLACK,\r\n  },\r\n  screenTitle: {\r\n    fontSize: 25,\r\n    color: Colors.primaryWhiteHex,\r\n    paddingLeft: 30,\r\n    top: 100,\r\n  },\r\n  TextInputContainer: {\r\n    height: 20 * 2,\r\n    width: 300,\r\n  },\r\n  InputContainer: {\r\n    flexDirection: \"row\",\r\n    margin: 30,\r\n    borderRadius: 10,\r\n    backgroundColor: \"#A9A9A9\",\r\n    alignItems: \"center\",\r\n    top: 100,\r\n    marginBottom: 110,\r\n  },\r\n  search: {\r\n    marginHorizontal: 10,\r\n  },\r\n  scrollViewFlex: {\r\n   \r\n  },\r\n  CategoryScrollViewStyle: {\r\n    paddingHorizontal: 10,\r\n  },\r\n  ActiveCategory: {\r\n    flexDirection: \"row\",\r\n    marginBottom: 20,\r\n  },\r\n  CategoryText: {\r\n    color: Colors.primaryWhiteHex,\r\n    margin: 10,\r\n    padding: 10,\r\n    backgroundColor: Colors.DEFAULT_GREEN,\r\n  },\r\n  CategoryStyleView: {\r\n    flex: 1,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}