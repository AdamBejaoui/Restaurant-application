{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Display } from \"../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RestaurantCard(_ref) {\n  var restaurant = _ref.restaurant,\n    onPress = _ref.onPress;\n  var name = restaurant.name,\n    main_image = restaurant.main_image,\n    category = restaurant.category,\n    rating = restaurant.rating,\n    status = restaurant.status;\n  var handleButtonPress = function handleButtonPress() {\n    onPress(restaurant);\n    console.log(restaurant);\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: handleButtonPress,\n    children: _jsxs(View, {\n      style: styles.cardContainer,\n      children: [_jsx(Image, {\n        source: {\n          uri: main_image.trim()\n        },\n        style: styles.cardImage\n      }), _jsx(Text, {\n        style: styles.cardName,\n        children: name\n      }), _jsx(Text, {\n        style: styles.cardCategory,\n        children: category\n      }), _jsx(Text, {\n        style: styles.cardRating,\n        children: `Rating: ${rating}`\n      }), status && _jsx(Text, {\n        style: styles.cardStatus,\n        children: status\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  cardContainer: {\n    backgroundColor: 'white',\n    borderRadius: 10,\n    margin: 10,\n    padding: 10\n  },\n  cardImage: {\n    height: Display.setHeight(20),\n    width: Display.setWidth(90)\n  },\n  cardName: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  cardRating: {\n    color: 'gray'\n  },\n  cardStatus: {\n    color: 'green',\n    paddingTop: 5,\n    fontSize: 16\n  },\n  cardCategory: {\n    color: 'gray'\n  }\n});","map":{"version":3,"names":["React","View","Text","Image","StyleSheet","TouchableOpacity","Button","Display","jsx","_jsx","jsxs","_jsxs","RestaurantCard","_ref","restaurant","onPress","name","main_image","category","rating","status","handleButtonPress","console","log","children","style","styles","cardContainer","source","uri","trim","cardImage","cardName","cardCategory","cardRating","cardStatus","create","backgroundColor","borderRadius","margin","padding","height","setHeight","width","setWidth","fontSize","fontWeight","color","paddingTop"],"sources":["C:/Users/mahmoud/Desktop/Nouveau dossier/Restaurant-application/Client/src/Component/RestaurantCard.jsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, Image, StyleSheet, TouchableOpacity ,Button} from 'react-native';\r\nimport { Display } from \"../utils\";\r\n\r\nexport default function RestaurantCard({ restaurant, onPress }) {\r\n  \r\n  const { name, main_image, category, rating, status } = restaurant;\r\n  const handleButtonPress = () => {\r\n    onPress(restaurant)\r\n    console.log(restaurant)\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity onPress={handleButtonPress}>\r\n      <View style={styles.cardContainer}>\r\n        <Image source={{ uri: main_image.trim() }} style={styles.cardImage} />\r\n        <Text style={styles.cardName}>{name}</Text>\r\n        <Text style={styles.cardCategory}>{category}</Text>\r\n        <Text style={styles.cardRating}>{`Rating: ${rating}`}</Text>\r\n        {status && (\r\n          <Text style={styles.cardStatus}>{status}</Text>\r\n        )}\r\n           \r\n      </View>\r\n    </TouchableOpacity  >\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  cardContainer: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    margin: 10,\r\n    padding: 10,\r\n  },\r\n  cardImage: {\r\n    height: Display.setHeight(20),\r\n    width: Display.setWidth(90),\r\n  },\r\n  cardName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  cardRating: {\r\n    color: 'gray',\r\n  },\r\n  cardStatus: {\r\n    color: 'green',\r\n  \r\n    paddingTop: 5,\r\n    fontSize: 16,\r\n  },\r\n  cardCategory: {\r\n    color: 'gray',\r\n  },\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAE1B,SAASC,OAAO;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnC,eAAe,SAASC,cAAcA,CAAAC,IAAA,EAA0B;EAAA,IAAvBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EAE1D,IAAQC,IAAI,GAA2CF,UAAU,CAAzDE,IAAI;IAAEC,UAAU,GAA+BH,UAAU,CAAnDG,UAAU;IAAEC,QAAQ,GAAqBJ,UAAU,CAAvCI,QAAQ;IAAEC,MAAM,GAAaL,UAAU,CAA7BK,MAAM;IAAEC,MAAM,GAAKN,UAAU,CAArBM,MAAM;EAClD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9BN,OAAO,CAACD,UAAU,CAAC;IACnBQ,OAAO,CAACC,GAAG,CAACT,UAAU,CAAC;EACzB,CAAC;EAED,OACEL,IAAA,CAACJ,gBAAgB;IAACU,OAAO,EAAEM,iBAAkB;IAAAG,QAAA,EAC3Cb,KAAA,CAACV,IAAI;MAACwB,KAAK,EAAEC,MAAM,CAACC,aAAc;MAAAH,QAAA,GAChCf,IAAA,CAACN,KAAK;QAACyB,MAAM,EAAE;UAAEC,GAAG,EAAEZ,UAAU,CAACa,IAAI,CAAC;QAAE,CAAE;QAACL,KAAK,EAAEC,MAAM,CAACK;MAAU,CAAE,CAAC,EACtEtB,IAAA,CAACP,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACM,QAAS;QAAAR,QAAA,EAAER;MAAI,CAAO,CAAC,EAC3CP,IAAA,CAACP,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACO,YAAa;QAAAT,QAAA,EAAEN;MAAQ,CAAO,CAAC,EACnDT,IAAA,CAACP,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACQ,UAAW;QAAAV,QAAA,EAAG,WAAUL,MAAO;MAAC,CAAO,CAAC,EAC3DC,MAAM,IACLX,IAAA,CAACP,IAAI;QAACuB,KAAK,EAAEC,MAAM,CAACS,UAAW;QAAAX,QAAA,EAAEJ;MAAM,CAAO,CAC/C;IAAA,CAEG;EAAC,CACW,CAAC;AAEzB;AAEA,IAAMM,MAAM,GAAGtB,UAAU,CAACgC,MAAM,CAAC;EAC/BT,aAAa,EAAE;IACbU,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACX,CAAC;EACDT,SAAS,EAAE;IACTU,MAAM,EAAElC,OAAO,CAACmC,SAAS,CAAC,EAAE,CAAC;IAC7BC,KAAK,EAAEpC,OAAO,CAACqC,QAAQ,CAAC,EAAE;EAC5B,CAAC;EACDZ,QAAQ,EAAE;IACRa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDZ,UAAU,EAAE;IACVa,KAAK,EAAE;EACT,CAAC;EACDZ,UAAU,EAAE;IACVY,KAAK,EAAE,OAAO;IAEdC,UAAU,EAAE,CAAC;IACbH,QAAQ,EAAE;EACZ,CAAC;EACDZ,YAAY,EAAE;IACZc,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}